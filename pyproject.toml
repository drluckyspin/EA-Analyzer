[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ea-analyzer"
version = "0.1.0"
description = "Electrical diagram parsing and knowledge graph extraction"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pydantic>=2.0.0",
    "networkx>=3.0",
    "matplotlib>=3.5.0",
    "pillow>=9.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "neo4j>=5.0.0",
    "typer>=0.9.0",
    "openai>=1.0.0",
    "anthropic>=0.8.0",
    "google-generativeai>=0.3.0",
]

[project.optional-dependencies]
dev = ["pytest>=7.0.0", "pytest-cov>=4.0.0", "mypy>=1.0.0", "ruff>=0.1.0"]

#[project.scripts]
# Removed console script; use local bash CLI instead

[tool.hatch.build.targets.wheel]
packages = ["src/ea_analyzer"]


[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "Q",   # flake8-quotes
    "RUF", # Ruff-specific rules
]
ignore = [
    "S101",    # assert usage
    "PLR0913", # too many arguments
    "PLR2004", # magic value comparison
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "B008",    # do not perform function calls in argument defaults
    "B904",    # raise from
    "C901",    # too complex
    "T201",    # print statements
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
