# EA-Analyzer Environment Configuration
# Copy this file to .env and update with your actual values

# Data file path
DATA_FILE=data/one-line-knowledge-graph.json

# Neo4j Configuration
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=password
NEO4J_DATABASE=neo4j

# Docker configuration for Neo4j
NEO4J_CONTAINER_NAME=ea-analyzer-neo4j
NEO4J_IMAGE=neo4j:5.15-community
NEO4J_HTTP_PORT=7474
NEO4J_BOLT_PORT=7687

# LLM Provider API Keys (set only the one you use)
# OpenAI
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Google (Gemini)
GOOGLE_API_KEY=your_google_api_key_here

# LLM Configuration (optional, defaults will be used if not set)
LLM_PROVIDER=openai
LLM_MODEL=gpt-4o

# Display Configuration
USE_COLORS=true
VERBOSE_OUTPUT=false

# Example Queries (optional, semicolon-separated)
EXAMPLE_QUERIES="MATCH (t:Transformer) RETURN t.id, t.name, t.hv_kv, t.lv_kv ORDER BY t.id;MATCH (b:Breaker) RETURN b.id, b.name, b.kv_class, b.continuous_a ORDER BY b.id;MATCH (r:RelayFunction)-[rel:PROTECTS]->(p) RETURN r.device_code, r.description, p.name, p.type ORDER BY r.device_code;MATCH (bus:Busbar)-[r:CONNECTS_TO]-(comp) RETURN bus.name, head(labels(comp)) as type, comp.name, r.via ORDER BY bus.name, type;MATCH (n) WHERE n:GridSource OR n:Transformer RETURN head(labels(n)) as type, n.name, n.kv ORDER BY type, n.name"
