services:
  neo4j:
    image: ${NEO4J_IMAGE:-neo4j:5.15-community}
    container_name: ${NEO4J_CONTAINER_NAME:-ea-analyzer-neo4j}
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474" # HTTP
      - "${NEO4J_BOLT_PORT:-7687}:7687" # Bolt
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-password}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - ea-analyzer-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: ea-analyzer-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - NEO4J_URI=bolt://neo4j:${NEO4J_BOLT_PORT:-7687}
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - ea-analyzer-network
    restart: unless-stopped
    volumes:
      - ./src:/app/src:ro # Mount source code for development

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: ea-analyzer-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    volumes:
      - ./.git:/app/.git:ro
    depends_on:
      backend:
        condition: service_started
    networks:
      - ea-analyzer-network
    restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  ea-analyzer-network:
    driver: bridge
